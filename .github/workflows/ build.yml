# 整个流程的名字
name: 自动发布npm包

# 触发时机，在 main 分支 push 操作触发
on:
  push:
    branches:
      - test

# 默认shell
defaults:
  run:
    shell: bash
# 任务，定义个changelog 的任务
jobs:
  changelog:
    name: Changelog PR or Release
    permissions: write-all
    # 这里判断仓库owner是否是我自己，为了避免别人 fork 仓库触发，请自行修改
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # 设置 Node
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install pnpm
        run: npm install -g pnpm

      # 安装依赖
      - name: Install dependencies
        run: pnpm install

      # 打包
      - name: Build Packages
        run: pnpm run build

      - name: Build Packages
        run: pnpm version patch
        env:
          # GITHUB_TOKEN 是 CI 里自带的默认 token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # NPM_TOKEN 需要稍后在 npm 网站生成。
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build Packages
        run: pnpm publish
        env:
          # GITHUB_TOKEN 是 CI 里自带的默认 token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # NPM_TOKEN 需要稍后在 npm 网站生成。
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # 这一步是最重要的。使用changesets/action自动创建 PR 或者发布
#      - name: Create Release Pull Request or Publish
#        id: changesets
#        uses: changesets/action@v1
#        with:
#          # 执行更新版本和发布的命令
#          version: pnpm run version
#          publish: pnpm run pub
#          commit: '[ci] release'
#          title: '[ci] release'
#        env:
#          # GITHUB_TOKEN 是 CI 里自带的默认 token
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          # NPM_TOKEN 需要稍后在 npm 网站生成。
#          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

